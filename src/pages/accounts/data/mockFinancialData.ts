
import { format, addDays, subDays } from 'date-fns';
import { PayableAccount, ReceivableAccount } from '@/types';

export const mockPayableAccounts: PayableAccount[] = [
  {
    id: '1',
    supplierName: 'Fornecedor de Combustíveis',
    description: 'Abastecimento da frota',
    amount: 5000,
    dueDate: format(addDays(new Date(), 5), 'yyyy-MM-dd'),
    paymentMethod: 'boleto',
    status: 'pending',
    categoryId: '1',
    categoryName: 'Combustível',
    isFixedExpense: false,
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: '2',
    supplierName: 'Aluguel do Galpão',
    description: 'Aluguel mensal',
    amount: 8500,
    dueDate: format(addDays(new Date(), -2), 'yyyy-MM-dd'),
    paymentMethod: 'transfer',
    status: 'overdue',
    categoryId: '2',
    categoryName: 'Aluguel',
    isFixedExpense: true,
    recurring: true,
    recurrenceFrequency: 'monthly',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: '3',
    supplierName: 'Seguradora',
    description: 'Seguro da frota',
    amount: 3200,
    dueDate: format(addDays(new Date(), -10), 'yyyy-MM-dd'),
    paymentDate: format(addDays(new Date(), -10), 'yyyy-MM-dd'),
    paymentMethod: 'card',
    status: 'paid',
    categoryId: '3',
    categoryName: 'Seguros',
    isFixedExpense: true,
    recurring: true,
    recurrenceFrequency: 'monthly',
    installments: 12,
    currentInstallment: 6,
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: '4',
    supplierName: 'Fornecedor de Peças',
    description: 'Manutenção de veículos',
    amount: 2300,
    dueDate: format(subDays(new Date(), 20), 'yyyy-MM-dd'),
    paymentDate: format(subDays(new Date(), 18), 'yyyy-MM-dd'),
    paymentMethod: 'card',
    status: 'paid',
    categoryId: '8',
    categoryName: 'Manutenção',
    isFixedExpense: false,
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: '5',
    supplierName: 'Posto ABC',
    description: 'Diesel para frota',
    amount: 4800,
    dueDate: format(subDays(new Date(), 30), 'yyyy-MM-dd'),
    paymentDate: format(subDays(new Date(), 30), 'yyyy-MM-dd'),
    paymentMethod: 'pix',
    status: 'paid',
    categoryId: '1',
    categoryName: 'Combustível',
    isFixedExpense: false,
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: '6',
    supplierName: 'Conta de Água',
    description: 'Conta mensal',
    amount: 350,
    dueDate: format(addDays(new Date(), 10), 'yyyy-MM-dd'),
    paymentMethod: 'boleto',
    status: 'pending',
    categoryId: '4',
    categoryName: 'Água',
    isFixedExpense: true,
    recurring: true,
    recurrenceFrequency: 'monthly',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: '7',
    supplierName: 'Conta de Luz',
    description: 'Conta mensal',
    amount: 1200,
    dueDate: format(addDays(new Date(), 8), 'yyyy-MM-dd'),
    paymentMethod: 'boleto',
    status: 'pending',
    categoryId: '5',
    categoryName: 'Luz',
    isFixedExpense: true,
    recurring: true,
    recurrenceFrequency: 'monthly',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
];

export const mockReceivableAccounts: ReceivableAccount[] = [
  {
    id: '1',
    clientId: 'client1',
    clientName: 'Empresa ABC',
    description: 'Serviço de frete',
    amount: 3500,
    dueDate: format(addDays(new Date(), 5), 'yyyy-MM-dd'),
    status: 'pending',
    categoryId: '1',
    categoryName: 'Fretes',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: '2',
    clientId: 'client2',
    clientName: 'Distribuidora XYZ',
    description: 'Entrega de mercadorias',
    amount: 2800,
    dueDate: format(addDays(new Date(), -2), 'yyyy-MM-dd'),
    status: 'overdue',
    categoryId: '1',
    categoryName: 'Fretes',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: '3',
    clientId: 'client3',
    clientName: 'Comércio Ltda',
    description: 'Transporte mensal',
    amount: 5200,
    dueDate: format(addDays(new Date(), -10), 'yyyy-MM-dd'),
    receivedDate: format(addDays(new Date(), -10), 'yyyy-MM-dd'),
    receivedAmount: 5200,
    receivedMethod: 'pix',
    status: 'received',
    categoryId: '1',
    categoryName: 'Fretes',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: '4',
    clientId: 'client4',
    clientName: 'Indústria Nacional',
    description: 'Transporte de cargas',
    amount: 4200,
    dueDate: format(addDays(new Date(), -5), 'yyyy-MM-dd'),
    receivedDate: format(addDays(new Date(), -5), 'yyyy-MM-dd'),
    receivedAmount: 2000,
    remainingAmount: 2200,
    receivedMethod: 'transfer',
    status: 'partially_received',
    categoryId: '1',
    categoryName: 'Fretes',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: '5',
    clientId: 'client5',
    clientName: 'Exportadora S/A',
    description: 'Transporte internacional',
    amount: 8500,
    dueDate: format(subDays(new Date(), 15), 'yyyy-MM-dd'),
    receivedDate: format(subDays(new Date(), 15), 'yyyy-MM-dd'),
    receivedAmount: 8500,
    receivedMethod: 'transfer',
    status: 'received',
    categoryId: '1',
    categoryName: 'Fretes',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: '6',
    clientId: 'client6',
    clientName: 'Varejista Ltda',
    description: 'Entrega de produtos',
    amount: 1800,
    dueDate: format(addDays(new Date(), 12), 'yyyy-MM-dd'),
    status: 'pending',
    categoryId: '1',
    categoryName: 'Fretes',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
];
